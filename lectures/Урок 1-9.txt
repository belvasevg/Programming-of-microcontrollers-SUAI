//первый проект - это однострочный комментарий
#include <iostream> //директива препроцесса, то есть подключаем код из библиотеки iostream
using namespace std; //пространство имём для определения вызываемых значений, функций и т.д. Без него не будут использоваться функции
//escape
/*
escape последоваельности - это символы, использующиеся для формирования вывод текста на экран
\b - пробел
\a - сигнал
\f - перевод страницы
\r - возврат каретки
\n - перейти на начало новой строки
\t - перейтие к следующей позиции табуляции
\xdd - перевод к шеснадцатеричной форме, для выбора символа из ASCII

\\ - вывод обратной черты
\" - вывод двойной ковычки
\' - вывод одинарной ковычки
*/
// типы данных
/*
* float - вещественные числа: размер 4 байта, описывает вещественные числа одинарной точности
* double - вещественные числа: размер 8 байт, описывает вещественные числа двойной точности
* int - целые числа: размер 4 байта, описывает целые числа от -2147483648 до +2147483648
* short - целые числа: размер 2 байта, описывает целые числа от -32768 до +32767
* long - целые числа: размер 4 байта, описывает целые числа от -2147483648 до +2147483648
* char - символы: размер 1 байт, описывает символы
* bool - логические значения: размер 1 байт: описывает логические значения True и False
*/
// переменные
/* Переменная - это область в оперативной памяти, обладающая именем. Предназначается для хранения в себе значения.
* Переменная может изменять своё содержание.
* Для объявления переменной нужно указать её:
												тип_данных имя;
  Создание переменной называется объёвлением
  Правило создания переменной: имя переменной должно отражать то, что она в себе несёт.
  Переменной можно присваивать значение. Если переменной не писвоено значение - она не инициализирована.
  Инициализировать переменные можно вместе с их инициализацией
  char может хранить одну переменную (символ), однако, escape последовательности игнорируются и могут храниться внутри char
*/
// константы
/* константы - это те же переменные, предназначенные для хранения переменных
* константы не изменяются
* константы лучше объявлять в верхнем регистре ВОТ_ТАК
*/
void main()
{
	// вывод данных

	//setlocale(LC_ALL, "Rus"); // функция перевода символов на русский язык
	//Пример вывод данных
	//cout << "Это моя 'первая' программа"<<endl; //вывод значений в консоль
	//cout << "\tЭто моя \'первая\' \b\nпрограмма!" << endl; //вывод значений в консоль c escape последовательностями
	//std::cout << "Это моя 'первая' программа" << endl; //вывод значений в консоль

	//работа с целыми числами
	/*
	setlocale(LC_ALL, "Rus");
	//int a, b, c; // инициализация переменных
	int a = 5, b = 10, c; // инициализация переменных с их определением
	//a = 5;
	//b = 10;
	c = a + b;
	cout << "Результат сложения a+b: " << c << endl;
	*/
	//приведение типов данных
	/*
	setlocale(LC_ALL, "Rus"); // функция перевода символов на русский язык
	int d = 3.;
	cout << "Число окрулится до меньшего целого целого: " << d << endl;
	*/
	//символы
	/*
	char message;
	message = 'H';
	cout << message << endl;
	*/
	//булевы значения
	/*
	setlocale(LC_ALL, "Rus"); // функция перевода символов на русский язык
	bool t = true, f = false;
	cout << "Правда: " << t << "\n" << "Ложь: " << f << endl;
	*/
	//константы
	/*
	setlocale(LC_ALL, "Rus");
	const double DAYS_WEEK = 7;
	const char END = '\n'; //переход на следующую строку
	//DAYS_WEEK = 5; // ошибка определения константы
	cout << "Дней в неделе: " << DAYS_WEEK << endl;
	cout << "Дней в неделе: " << DAYS_WEEK << END;
	*/
	//ввод данных
	/*
	int var1, var2, var3, var4;
	cout << "Введите первое число: ";
	cin >> var1;
	cout << "Введите второе число: ";
	cin >> var2;
	cout << "Сумма чисел var1 + var2 = " << var1+var2 << endl;
	cout << "Введите два числа var3 и var4: ";
	cin >> var3 >> var4;
	cout << "Сумма всех чисел равна: " << var1 + var2 + var3 + var4 << endl;
	*/
	//Операторы
	//пример 1
	/*
	//Существуют унарные, бинарные и тернарные операторы
	//пример унарного оператора "-"
	int a = 5;
	cout << a << endl;
	a = -a;
	cout << a << endl;
	*/
	//пример 2
	/*
	//примеры бинарных операторов
	//арифметические операторы: +,-,*,/,%
	//операторы равенства: ==,!=
	//операторы сравнения: <,>,<=,>=
	double a = 10, b = 3, c;
	c = a / b;
	cout << c;
	*/
	//инкремент и декремент
	int a,b,c,d;
	// постфиксная запись обладает самым низким приоритетом, часто выполняется после операций
	// префиксный обладает высшим приоритетом
	a++; // постфиксный инкремент
	b--;// постфиксный декремент
	++c; // префиксный инкремент
	--d; // префиксный декремент
}